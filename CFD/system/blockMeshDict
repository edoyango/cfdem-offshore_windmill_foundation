/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (-15       0        0) // 0
    (-5        0        0) // 1
    (-2.5      0        0) // 2
    ( 2.5      0        0) // 3
    ( 5        0        0) // 4
    ( 15       0        0) // 5
    ( 15       3.535534 0) // 6
    ( 15       15       0) // 7
    ( 3.535534 15       0) // 8
    (-3.535534 15       0) // 9
    (-15       15       0) // 10
    (-15       3.535534 0) // 11
    (-3.535534 3.535534 0) // 12
    ( 3.535534 3.535534 0) // 13
    (-1.767767 1.767767 0) // 14
    ( 1.767767 1.767767 0) // 15

    (-15       0        5) // 16
    (-5        0        5) // 17
    (-2.5      0        5) // 18
    ( 2.5      0        5) // 19
    ( 5        0        5) // 20
    ( 15       0        5) // 21
    ( 15       3.535534 5) // 22
    ( 15       15       5) // 23
    ( 3.535534 15       5) // 24
    (-3.535534 15       5) // 25
    (-15       15       5) // 26
    (-15       3.535534 5) // 27
    (-3.535534 3.535534 5) // 28
    ( 3.535534 3.535534 5) // 29
    (-1.767767 1.767767 5) // 30
    ( 1.767767 1.767767 5) // 31
);

blocks
(
    hex (0 1 12 11 16 17 28 27)   (20 10 20) simpleGrading (1 1 1) // W block
    hex (11 12 9 10 27 28 25 26)  (20 20 20) simpleGrading (1 1 1) // NW block
    hex (8 9 12 13 24 25 28 29)   (20 20 20) simpleGrading (1 1 1) // N block
    hex (6 7 8 13 22 23 24 29)    (20 20 20) simpleGrading (1 1 1) // NE block
    hex (4 5 6 13 20 21 22 29)    (20 10 20) simpleGrading (1 1 1) // E block
    hex (1 2 14 12 17 18 30 28)   (10 10 20) simpleGrading (1 1 1) // W ring block
    hex (13 12 14 15 29 28 30 31) (20 10 20) simpleGrading (1 1 1) // N ring block
    hex (3 4 13 15 19 20 29 31)   (10 10 20) simpleGrading (1 1 1) // E ring block
);

edges
(
    arc 1 12 (-4.619398 1.913417 0)
    arc 12 13 (0 5 0)
    arc 13 4 (4.619398 1.913417 0) // (5*cos(pi/8) 5*sin(pi/8) 0)
    arc 2 14 (-2.309699 0.956709 0)
    arc 14 15 (0 2.5 0)
    arc 3 15 (2.309699 0.956709 0) // (2.5*cos(pi/8) 2.5*sin(pi/8) 0)

    arc 17 28 (-4.619398 1.913417 5)
    arc 28 29 (0 5 5)
    arc 29 20 (4.619398 1.913417 5)
    arc 18 30 (-2.309699 0.956709 5)
    arc 30 31 (0 2.5 5)
    arc 19 31 (2.309699 0.956709 5)
);

boundary
(
    floor
    {
        type wall;
        faces
        (
            (0 1 12 11)
            (9 10 11 12)
            (8 9 12 13)
            (6 7 8 13)
            (4 5 6 13)
            (1 2 14 12)
            (14 15 13 12)
            (3 4 13 15)
        );
    }
    ceiling
    {
        type patch;
        faces
        (
            (27 28 17 16)
            (28 27 26 25)
            (29 28 25 24)
            (29 24 23 22)
            (29 22 21 20)
            (28 30 18 17)
            (28 29 31 30)
            (31 29 20 19)
        );
    }
    cylinder
    {
        type wall;
        faces
        (
            (2 18 30 14)
            (15 14 30 31)
            (3 15 31 19)
        );
    }
    north
    {
        type symmetryPlane;
        faces
        (
            (9 10 26 25)
            (8 9 25 24)
            (7 8 24 23)
        );
    }
    south
    {
        type symmetryPlane;
        faces
        (
            (1 0 16 17)
            (2 1 17 18)
            (4 3 19 20)
            (5 4 20 21)
        );
    }
    east
    {
        type patch;
        faces
        (
            (5 6 22 21)
            (6 7 23 22)
        );
    }
    west
    {
        type patch;
        faces
        (
            (0 11 27 16)
            (11 10 26 27)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
